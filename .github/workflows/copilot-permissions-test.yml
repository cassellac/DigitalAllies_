name: Copilot Agent Permissions Test

on:
  workflow_dispatch:
    inputs:
      test_type:
        description: 'Type of permission test to run'
        required: true
        default: 'basic'
        type: choice
        options:
          - basic
          - files
          - issues
          - pull_requests

permissions:
  contents: write
  issues: write
  pull-requests: write
  actions: write
  metadata: read
  id-token: write

jobs:
  permission-test:
    runs-on: ubuntu-latest
    name: Test Copilot Agent Permissions
    
    steps:
    - name: Print workflow information
      run: |
        echo "üîç GitHub Copilot Permissions Test Workflow"
        echo "============================================"
        echo "Event: ${{ github.event_name }}"
        echo "Repository: ${{ github.repository }}"
        echo "Branch: ${{ github.ref_name }}"
        echo "Actor: ${{ github.actor }}"
        echo ""
        echo "This workflow tests the permissions required for GitHub Copilot agents:"
        echo "‚úÖ Repository contents (read/write)"
        echo "‚úÖ Issues (create/read/update/close)"
        echo "‚úÖ Pull requests (create/read/update/close)"
        echo "‚úÖ GitHub Actions (read/execute)"
        echo ""
        
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Test file read permissions
      run: |
        echo "Testing file read permissions..."
        ls -la
        cat README.md | head -5
        echo "‚úÖ File read permissions working"
        
    - name: Test file write and repository commit permissions
      run: |
        echo "Testing file write and repository commit permissions..."
        echo "# Copilot Agent Test - $(date)" > test-permissions.md
        echo "This file was created by the Copilot agent permissions test workflow." >> test-permissions.md
        cat test-permissions.md
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add test-permissions.md
        git commit -m "Copilot Agent Permissions Test: add test-permissions.md [skip ci]" || echo "No changes to commit"
        git push origin HEAD
        echo "‚úÖ File write and repository commit permissions working"
        
    - name: Test branch access
      run: |
        echo "Testing branch access..."
        git branch -a
        echo "Current branch: $(git branch --show-current)"
        echo "‚úÖ Branch access working"
        
    - name: Test Actions metadata access
      run: |
        echo "Testing Actions metadata access..."
        echo "Workflow: ${{ github.workflow }}"
        echo "Run ID: ${{ github.run_id }}"
        echo "Actor: ${{ github.actor }}"
        echo "Repository: ${{ github.repository }}"
        echo "‚úÖ Actions metadata access working"
        
    - name: Create test issue (if permissions allow)
      if: (github.event_name == 'workflow_dispatch' && github.event.inputs.test_type == 'issues') || github.event_name == 'push' || github.event_name == 'pull_request'
      uses: actions/github-script@v7
      continue-on-error: true
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const core = require('@actions/core');
          
          try {
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Copilot Agent Permissions Test - Issues',
              body: 'This issue was created by the Copilot agent permissions test workflow to verify issue creation permissions.\n\nCreated at: ' + new Date().toISOString()
            });
            console.log('‚úÖ Issue creation permissions working - Issue #' + issue.data.number);
            
            // Close the test issue immediately
            await github.rest.issues.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue.data.number,
              state: 'closed'
            });
            console.log('‚úÖ Issue update permissions working - Issue closed');
          } catch (error) {
            console.error('‚ùå Issue permissions test failed:', error.message);
            core.setFailed('Issue permissions test failed');
          }
          
    - name: Test PR permissions (on workflow_dispatch only)
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.test_type == 'pull_requests'
      uses: actions/github-script@v7
      continue-on-error: true
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const core = require('@actions/core');
          
          try {
            // First create a test branch
            const currentBranch = context.ref.replace('refs/heads/', '');
            const ref = await github.rest.git.getRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'heads/' + currentBranch
            });
            
            const branchName = 'copilot-permissions-test-' + Date.now();
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/heads/' + branchName,
              sha: ref.data.object.sha
            });
            
            console.log('‚úÖ Branch creation permissions working - Branch: ' + branchName);
            
            // Then create a test PR
            const pr = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Copilot Agent Permissions Test - PR',
              body: 'This pull request was created by the Copilot agent permissions test workflow.\n\nCreated at: ' + new Date().toISOString(),
              head: branchName,
              base: currentBranch
            });
            
            console.log('‚úÖ PR creation permissions working - PR #' + pr.data.number);
            
            // Close the test PR
            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.data.number,
              state: 'closed'
            });
            
            // Delete the test branch
            await github.rest.git.deleteRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'heads/' + branchName
            });
            
            console.log('‚úÖ PR update and branch deletion permissions working');
          } catch (error) {
            console.error('‚ùå PR permissions test failed:', error.message);
            core.setFailed('PR permissions test failed');
          }
          
    - name: Cleanup test files
      run: |
        echo "Cleaning up test files..."
        rm -f test-permissions.md
        echo "‚úÖ Cleanup completed"
        
    - name: Permissions test summary
      run: |
        echo "üéâ Copilot Agent Permissions Test Summary"
        echo "========================================"
        echo "‚úÖ File read permissions: PASSED"
        echo "‚úÖ File write permissions: PASSED" 
        echo "‚úÖ Branch access permissions: PASSED"
        echo "‚úÖ Actions metadata access: PASSED"
        echo ""
        echo "Additional tests can be run manually using workflow_dispatch with:"
        echo "- test_type: 'issues' to test issue management"
        echo "- test_type: 'pull_requests' to test PR management"
        echo ""
        echo "For full permissions verification, ensure the Copilot agent can:"
        echo "1. Read/write all repository files"
        echo "2. Create, update, and close issues"
        echo "3. Create, update, and merge pull requests"
        echo "4. Trigger and monitor GitHub Actions workflows"